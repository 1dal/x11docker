#! /bin/bash
#########################################
## GUI for x11docker
## MIT licence 2016, Martin Viereck
## Uses 'kaptain' to provide a GUI
# https://github.com/mviereck/x11docker
#########################################
#
# option -d shows some developer options


if test ! `command -v kaptain` ; then
  echo "Error: did not find executeable 'kaptain'. Please install package 'kaptain' and try again." >&2
  xmessage "Error: did not find executeable 'kaptain'. Please install package 'kaptain' and try again."
  exit 1
fi

X11DOCKER="./x11docker"
if test ! `command -v $X11DOCKER` ; then X11DOCKER="x11docker" ; fi
if test ! `command -v $X11DOCKER` ; then
  echo "Error: did not find executeable 'x11docker', neither in \$PATH. nor as
 executeable ./x11docker.
 Please make x11docker available (for example in /usr/local/bin) and try again." >&2
  xmessage "Error: did not find executeable 'x11docker', neither in \$PATH. nor as
  executeable ./x11docker.
  Please make x11docker available (for example in /usr/local/bin) and try again."
  exit 1
fi


if [ "$1" = "-d" ] ; then DEVELOPEROPTIONS="developeroptions" ; fi  # option -d shows developer options

#####################
# Preset some options you may want to be set as default
#
DOCKERIMAGE=""              # docker image [+ command]
DOCKEROPTIONS=""            # additional docker options
WM="openbox"                # host window manager
XEPHYRSCREENSIZE="800x600"

# Checkboxes: "!" disables option, "" enables it
HOSTUSER="!"
SUDOUSER="!"
HOMEFOLDER="!"
CLIPBOARD="!"
PULSEAUDIO="!"
VIRTUALGL="!"
GPU="!"
VERBOSE="!"
NOXHOST="!"
IPC="!"
SUDO="!"
XEPHYRFULLSCREEN="!"

# other way around: "!" enables option, "" disables it
X11=""
XEPHYR=""
HOSTDISPLAY=""
DESKTOP=""


# base64 coded image
x11docker_logo="/tmp/x11docker_logo.png"
echo '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
gg==' | base64 -d >  $x11docker_logo

kaptain_script='
start "x11docker GUI" -> options buttons;
  options:beside -> frameleft frameright '$DEVELOPEROPTIONS';
    frameleft:framed -> choose_image choose_X choose_wmordesktop;
    frameright:framed -> choose_options choose_options_advanced;

  developeroptions:framed -> devel useless_options;
  devel " Developer options. Use with care." -> devxortcp devsharegpu devxhost devprivileged devpid devnet devuts devalsa devvt;
    devalsa "--alsa: enable ALSA sound (alpha)" -> "--alsa " | ! "" ;
    devxortcp -> devxsocket | devtcp | devtcpxsocket ;
      devxsocket "--xsocket: Use shared X socket" -> "--xsocket " ;
      devtcp "--tcp: Connect to X over tcp" -> "--tcp ";
      devtcpxsocket "--tcpxsocket: share new X socket, \n but use tcp (dont use with --gpu)" -> "--tcpxsocket ";
    devxhost "--xhost: set xhost + on both X servers" -> "--xhost " | ! "" ;
    devsharegpu "--sharegpu: share devices in /dev/dri" -> "--sharegpu " | ! "";
    devprivileged "--privileged: docker run --privileged" -> "--privileged " | ! "";
    devpid "--pid: docker run --pid=host" -> "--pid " | ! "";
    devnet "--net: docker run --net=host" -> "--net " | ! "";
    devuts "--uts: docker run --uts=host" -> "--uts " | ! "";
    devvt :beside "--vt: Console to use: " -> "--vt vt" @string="8" " " | ! "";
  useless_options "Less usefull options" -> log LOG ps cache cidfile command;

  choose_image "Run GUI applications in docker images" -> logo_imageorexe dockeroptions dockerimage ;
    logo_imageorexe:beside  -> @icon("'$x11docker_logo'") imageorexe ;
      imageorexe -> image | exe | xonly;
        image:beside "Run docker image in another X server" -> " " security_dialog;
        exe "Start host application in another X server" -> "exe ";
        xonly "Only create new empty X server" -> " # "; 
    dockerimage  :beside -> @text("docker image [and command] to run:") @string="'$DOCKERIMAGE'";
    dockeroptions :beside -> @text("Additional options for docker (use long form --opt=\"\"): ") @string="'$DOCKEROPTIONS'" " ";
      
    choose_X:framed "X server to use" -> autochoose | xpra | '$XEPHYR' xephyr | '$X11' X11 | '$HOSTDISPLAY' hostdisplay;
      autochoose"-x: Auto choose X server to use (regards option --wm or --desktop)" -> "-x " ;
      xpra "--xpra: Show container application windows on your main desktop" -> "--xpra ";
      xephyr "--xephyr: Show container desktop in a window on your main desktop" -> "--xephyr " xephyrspecials;
        xephyrspecials ->  xephyrfullscreen  xephyrresizeable xephyrsize xephyrglamor;
          xephyrfullscreen "--fullscreen: Run Xephyr in fullscreen mode" -> " --fullscreen " | '$XEPHYRFULLSCREEN' "";
          xephyrresizeable "--resizeable: Make Xephyr window resizeable" -> "--resizeable " | ! "";
          xephyrsize :beside "--size: Preset Xephyr window size: " -> "--size \"" @string="'$XEPHYRSCREENSIZE'" "\" " | ! "";
          xephyrglamor "--glamor: Enable glamor 2D acceleration" -> "--glamor " | ! "";
      X11 "--X11: Use core X server. (Switch with <CTRL><ALT><F7>...<F12>)" -> "--X11 ";
      hostdisplay "--hostdisplay: Use host display without container isolation" -> "--hostdisplay ";

   choose_wmordesktop "Choose window manager (options --xpra and --hostdisplay will ignore this)" -> wm | '$DESKTOP' desktop;
      wm :beside "--wm: Host window manager to use" ->  "--wm \"" @string="'$WM'" "\" ";
      desktop "--desktop: Image contains its own window manager" -> "--desktop ";  
      
    choose_options "Options" -> hostuser sudouser home clipboard pulseaudio virtualgl gpu;
      hostuser "--hostuser: Create container user \"'$USER'\" similar to \n your host user (same name, user id and group id) \n (a docker image command must be given)"->  " --hostuser " | '$HOSTUSER' "";
      sudouser "--sudouser: Like --hostuser, but member of group sudo \n (Allows all commands using sudo without a password)" -> " --sudouser " | '$SUDOUSER' "";
      home "--home: Share a host folder in '$HOME'/x11docker \n as /home/'$USER' in container." -> "--home " | '$HOMEFOLDER' "";  
      clipboard "--clipboard: Enable clipboard sharing (best with xpra)" -> "--clipboard " | '$CLIPBOARD' "";
      pulseaudio "--pulseaudio: Sound with pulseaudio \n (needs pulseaudio on host and in image to be installed)" -> "--pulseaudio " | '$PULSEAUDIO' "";
      virtualgl:beside "--virtualgl: Mediate GPU acceleration" -> "--virtualgl " | '$VIRTUALGL' "";
      gpu:beside "--gpu: Immediate GPU acceleration" -> "--gpu " | '$GPU' "" gpu_info;
      
    choose_options_advanced "Advanced options" -> verbose noxhost ipc root sudo;
      verbose "--verbose: Be verbose (terminal output of logfiles)" -> "--verbose " | '$VERBOSE' "";
      log "--log: Show logfiles in a window" -> "--log " | ! "";
      LOG "--LOG: like --log, but in new X server" -> "--LOG " | ! "";
      cache "--cache: Keep cache files in \n  ~/.cache/x11docker" -> "--cache " | ! "";
      ipc "--ipc: Share host interprocess communication and shared \n 
           memory. Use with option --hostuser only to minmize risks. \n
           Caution: breaks down container isolation. \n 
           Can speed up option --gpu and avoids rendering glitches \n 
           with option --hostdisplay. (Allows X extension MIT-SHM)" -> "--ipc " | '$IPC' "";
      ps "--ps: Keep created container" -> "--ps " | ! "" ;
      command "--command: Show created docker\n command and exit." -> "--command " | ! "";
      cidfile "--cid: Show file name \n containg container ID" -> "--cid " | ! "";
      noxhost "--no-xhost: Disable any access to host X server \n possibly permitted by xhost" -> "--no-xhost " | ! "" ;
      root "--root: Allow root to run x11docker (discouraged)" -> "--root " | ! "";
      sudo "--sudo: Use sudo instead of su to run docker \n (for systems without a root password like Ubuntu)" -> "--sudo " | '$SUDO' "";
      
  help:dialog "Help" -> @text(
  " x11docker allows you to run GUI applications and desktop environments from inside of docker images. \n
    Its main purpose is to preserve container isolation. This is tricky due to some X security leaks. \n
    x11docker can run a second X server to segregate docker applications from host applications. \n
    Depending on chosen options, you can have high or low container isolation. \n
    Look at \"Security table\" to see the differences. \n
    Hardware acceleration and pulseaudio sound are supported, too. \n
    \n
    Dependencies: \n
    Depending on chosen options, x11docker needs some additional packages to be installed on host. \n
    It will check for them on startup and show terminal messages if some are missing. \n
    List of possibly needed packages on host:  xpra  xserver-xephyr  xclip  pulseaudio  virtualgl\n 
    For option --pulseaudio, package pulseaudio needs to be installed in image, too. \n
    Hardware acceleration can have dependencies in image, too. Look at \"GPU acceleration info\".\n
    \n
    If using xpra or Xephyr, the dockered applications will appear on your already running X display. \n
    Docker applications will be segregated from your host display, and it is comfortable and secure to use. \n
    You can also choose option --hostdisplay for this to have least dependencies and least overhead, \n
    but then you have least container isolation, too. \n
    \n
    If using core X server, first run <dpkg-reconfigure x11-common> and choose option <anybody>. \n
    Otherwise you are not allowed to start a new core X server from within an already running X.\n
    If this command fails, you need to install package xserver-xorg-legacy and to run \n
    <dpkg-reconfigure xserver-xorg-legacy> instead.\n
    You can switch between displays using <CTRL><ALT><F7>...<F12>.\n
    \n
    If neither xpra nor Xephyr are installed, and x11-common is not reconfigured, \n
    only less secure option --hostdisplay will work out of the box.\n
    \n
    On systems without a root password like Ubuntu or Sparky, use option --sudo.\n
    \n
    For troubleshooting, acivate option --verbose and run x11docker-gui in a terminal.\n
    To see all options and more informations, run <x11docker --help>.\n
    \n
    x11docker and x11docker-gui are published under MIT licence. \n
    Have a look at github: https://github.com/mviereck/x11docker\n
    Some example docker images can be found at https://hub.docker.com/u/x11docker
    ") @close=" close";
    
  gpu_info:dialog "GPU acceleration info" -> @text(
        " Software accelerated OpenGL is available in all provided X servers. \n
          The image needs an OpenGL implementation to be able to use it. \n
          The easiest way to achieve this is to install package mesa-utils in docker image. \n
          Some applications need packages x11-utils and libxv1 to be installed in image, too. \n
          \n
          Hardware acceleration with option --gpu is fast and quite secure if used with option --X11. \n
          It can get a speed-up with insecure option --ipc to make MIT-SHM / shared memory possible. \n 
          \n
          Option --gpu works with option --hostdisplay, too, but this option leaks container isolation. \n
          To avoid rendering glitches and to get a speed-up, insecure option --ipc can be used.\n
          \n
          Hardware accelerated OpenGL with option --virtualgl is slower than with option --gpu, \n
          but works with options --xpra and --xephyr, too. Leaks isolation from X server on display :0. \n
          Needs VirtualGL to be installed on host: http://www.virtualgl.org \n
          \n
          SECURITY: Using hardware acceleration with options --gpu or --virtualgl can degrade \n
          container isolation. Option --ipc breaks down container isolation. \n
          Look at button \"Security table\" to see the differences. \n
          \n
          To check if hardware acceleration is at work, you can run \"glxinfo | grep renderer\". \n
          The OpenGL renderer string should contain the name of your graphic card. \n
          If the OpenGL renderer string contains \"llvmpipe\", only software rendering is at work.\n
          \n
          Known to work with Intel and AMD onboard chips using open source drivers.\n
          Test reports with different setups are appreciated.
          ") @close=" close"; 
    
  security_dialog:dialog "Security table" -> security_table security_info security_gpuinfo security_ipcnet @close=" close";
    security_table:beside -> sec_server sec_soft sec_virtualgl sec_gpu;
      sec_server -> @text(" Table to show grade of container isolation \n
                       depending on chosen options\n
                       \n
                       --xpra         = xpra (uses Xdummy)\n
                       --xephyr       = Xephyr (nested X server)\n
                       --X11          = second core X server\n
                       --hostdisplay  = share host display :0 (\*\*) \n");
      sec_soft -> @text(" software \n
                       rendering \n
                       \n
                       +++++\n
                       +++++\n
                       +++++\n
                       +:0\n");
      sec_virtualgl -> @text(" --virtualgl \n
                       \n
                       \n
                       +:0\n
                       +:0\n
                       ++++\n
                       +:0\n");
      sec_gpu -> @text(" --gpu (\*)\n
                       \n
                       \n
                       -\n
                       -\n
                       ++++\n
                       +:0\n");
    security_info:beside -> sec_infograde sec_infotext;
      sec_infograde -> @text(" +++++\n
                       ++++\n
                       +:0\n
                       \n
                       \n
                       -");
      sec_infotext -> @text(" > High container isolation, secure to use. \n
                       > High container isolation, slightly degraded by container access to GPU. \n
                       > Low container isolation due to X security leaks, considered insecure. \n
                        Container gains access to X server on display :0 with host applications. \n 
                        For example, keylogging is possible. For use with trusted images only. \n
                       > Does not work + slightly insecure.");
    security_gpuinfo -> @text(" (\*) --gpu: To get additional speed-up, you can use isolation breaking option --ipc \n
                       to make shared memory with X server possible (MIT-SHM extension) \n
                       (\*\*) --hostdisplay works with shared host X socket and can have rendering glitches \n 
                       due to missing shared memory. These glitches can be avoided with option --ipc.");
    security_ipcnet:beside -> sec_ipcnetoptions sec_ipcnetinfo;
      sec_ipcnetoptions -> @text (" --ipc \n") ;
      sec_ipcnetinfo -> @text(" > Isolation breakdown. Use with option --hostuser only to minimize risks. \n
                       Container access to host interprocess communication and shared memory. \n");
                       
  MIT:dialog "MIT license" -> @text(
               " MIT License\n
                 \n
                 Copyright (c) 2015,2016 Martin Viereck\n
                 \n
                 Permission is hereby granted, free of charge, to any person obtaining a copy\n
                 of this software and associated documentation files (the \"Software\"), to deal\n
                 in the Software without restriction, including without limitation the rights\n
                 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n
                 copies of the Software, and to permit persons to whom the Software is\n
                 furnished to do so, subject to the following conditions:\n
                 \n
                 The above copyright notice and this permission notice shall be included in all\n
                 copies or substantial portions of the Software.\n
                 \n
                 THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n
                 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n
                 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n
                 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n
                 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n
                 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n
                 SOFTWARE.") @close="close";

x11docker_options -> choose_X choose_wmordesktop choose_options choose_options_advanced devel useless_options"--" choose_image;
x11docker -> "'$X11DOCKER' " x11docker_options;

buttons :horizontal ->  run preview desktop_starter orphanedcheck MIT help @close="Cancel";
  run -> @dump(x11docker)=" Run";
  preview -> @preview(x11docker,"monospace",900)="Preview command" ;
  desktop_starter -> @dump("xterm -e '\''","'$X11DOCKER' --starter ",x11docker_options,"'\''")="Create desktop starter";
  orphanedcheck -> @dump("xterm -hold -e '"'"''$X11DOCKER' ",sudo," --orphaned '"'"'")="Check orphaned";
'

x11docker_command=$(echo $kaptain_script | kaptain /dev/stdin 2>/dev/null)
rm $x11docker_logo
echo $x11docker_command
eval $x11docker_command

